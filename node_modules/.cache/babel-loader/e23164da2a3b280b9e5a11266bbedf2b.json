{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TX1\\\\Documents\\\\GitHub\\\\sweetalert2-demo\\\\src\\\\App.js\";\nimport './App.css';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\nimport { Button, Row, Col, Divider, Form, Input, Checkbox, Radio } from 'antd';\nimport React, { Component } from 'react';\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\n\nimport _ from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  const style = {\n    background: '#0092ff',\n    padding: '8px 0',\n    width: '100%'\n  };\n  const iconTypes = ['warning', 'error', 'success', 'info', 'question'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: 18,\n        fontWeight: 600\n      },\n      children: \"sweetalert2 demo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Divider, {\n        orientation: \"left\",\n        children: \"Mixin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        gutter: {\n          xs: 8,\n          sm: 16,\n          md: 24,\n          lg: 32\n        },\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          className: \"gutter-row\",\n          span: 2,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: props.showAlertMixin,\n            children: \"Log in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        orientation: \"left\",\n        children: \"Inputs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        gutter: {\n          xs: 8,\n          sm: 16,\n          md: 24,\n          lg: 32\n        },\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          className: \"gutter-row\",\n          span: 2,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: props.showAlertInputText,\n            children: \"Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"gutter-row\",\n          span: 2,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: props.showAlertInputEmail,\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"gutter-row\",\n          span: 2,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: props.showAlertInputUrl,\n            children: \"Url\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"gutter-row\",\n          span: 2,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: props.showAlertInputPassword,\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"gutter-row\",\n          span: 2,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: props.showAlertInputTextArea,\n            children: \"TextArea\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"gutter-row\",\n          span: 2,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: props.showAlertInputSelect,\n            children: \"Select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"gutter-row\",\n          span: 2,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: props.showAlertInputRadio,\n            children: \"Radio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"gutter-row\",\n          span: 2,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: props.showAlertInputCheckbox,\n            children: \"Checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"gutter-row\",\n          span: 2,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: props.showAlertInputFile,\n            children: \"File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"gutter-row\",\n          span: 2,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: props.showAlertInputRange,\n            children: \"Range\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"gutter-row\",\n          span: 2,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: props.showAlertInputMulti,\n            children: \"Multi-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        orientation: \"left\",\n        children: \"Custom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex'\n        },\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          name: \"basic\",\n          labelCol: {\n            span: 8\n          },\n          wrapperCol: {\n            span: 16\n          },\n          initialValues: {\n            remember: true\n          } // onFinish={onFinish}\n          // onFinishFailed={onFinishFailed}\n          ,\n          autoComplete: \"off\",\n          style: {\n            width: '60%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"title\" // name=\"title\"\n            ,\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              value: props.title,\n              onChange: e => props.onTitleChange(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"icon\",\n            children: /*#__PURE__*/_jsxDEV(Radio.Group, {\n              value: props.icon,\n              onChange: e => props.onIconChange(e.target.value),\n              children: _.map(iconTypes, type => {\n                return /*#__PURE__*/_jsxDEV(Radio.Button, {\n                  value: type,\n                  children: type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        gutter: {\n          xs: 8,\n          sm: 16,\n          md: 24,\n          lg: 32\n        },\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          className: \"gutter-row\",\n          span: 2,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: props.showCustomAlert,\n            children: \"Custom alert\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\n\nlet hoc = WrappedComponent => {\n  return class EnhancedComponent extends Component {\n    constructor(props) {\n      super(props);\n\n      this.componentDidMount = () => {};\n\n      this.showAlertMixin = () => {\n        const Toast = Swal.mixin({\n          toast: true,\n          position: 'top-end',\n          showConfirmButton: false,\n          timer: 3000,\n          timerProgressBar: true,\n          didOpen: toast => {\n            toast.addEventListener('mouseenter', Swal.stopTimer);\n            toast.addEventListener('mouseleave', Swal.resumeTimer);\n          }\n        });\n        Toast.fire({\n          icon: 'success',\n          title: 'Signed in successfully'\n        });\n      };\n\n      this.showAlertInputText = async () => {\n        const ipAPI = '//api.ipify.org?format=json';\n        const inputValue = fetch(ipAPI).then(response => response.json()).then(data => data.ip);\n        const {\n          value: ipAddress\n        } = await Swal.fire({\n          title: 'Enter your IP address',\n          input: 'text',\n          inputLabel: 'Your IP address',\n          inputValue: inputValue,\n          showCancelButton: true,\n          inputValidator: value => {\n            if (!value) {\n              return 'You need to write something!';\n            }\n          }\n        });\n\n        if (ipAddress) {\n          Swal.fire(`Your IP address is ${ipAddress}`);\n        }\n      };\n\n      this.showAlertInputEmail = async () => {\n        const {\n          value: email\n        } = await Swal.fire({\n          title: 'Input email address',\n          input: 'email',\n          inputLabel: 'Your email address',\n          inputPlaceholder: 'Enter your email address'\n        });\n\n        if (email) {\n          Swal.fire(`Entered email: ${email}`);\n        }\n      };\n\n      this.showAlertInputUrl = async () => {\n        const {\n          value: url\n        } = await Swal.fire({\n          input: 'url',\n          inputLabel: 'URL address',\n          inputPlaceholder: 'Enter the URL'\n        });\n\n        if (url) {\n          Swal.fire(`Entered URL: ${url}`);\n        }\n      };\n\n      this.showAlertInputPassword = async () => {\n        const {\n          value: password\n        } = await Swal.fire({\n          title: 'Enter your password',\n          input: 'password',\n          inputLabel: 'Password',\n          inputPlaceholder: 'Enter your password',\n          inputAttributes: {\n            maxlength: 10,\n            autocapitalize: 'off',\n            autocorrect: 'off'\n          }\n        });\n\n        if (password) {\n          Swal.fire(`Entered password: ${password}`);\n        }\n      };\n\n      this.showAlertInputTextArea = async () => {\n        const {\n          value: text\n        } = await Swal.fire({\n          input: 'textarea',\n          inputLabel: 'Message',\n          inputPlaceholder: 'Type your message here...',\n          inputAttributes: {\n            'aria-label': 'Type your message here'\n          },\n          showCancelButton: true\n        });\n\n        if (text) {\n          Swal.fire(text);\n        }\n      };\n\n      this.showAlertInputSelect = async () => {\n        const {\n          value: fruit\n        } = await Swal.fire({\n          title: 'Select field validation',\n          input: 'select',\n          inputOptions: {\n            'Fruits': {\n              apples: 'Apples',\n              bananas: 'Bananas',\n              grapes: 'Grapes',\n              oranges: 'Oranges'\n            },\n            'Vegetables': {\n              potato: 'Potato',\n              broccoli: 'Broccoli',\n              carrot: 'Carrot'\n            },\n            'icecream': 'Ice cream'\n          },\n          inputPlaceholder: 'Select a fruit',\n          showCancelButton: true,\n          inputValidator: value => {\n            return new Promise(resolve => {\n              if (value === 'oranges') {\n                resolve();\n              } else {\n                resolve('You need to select oranges :)');\n              }\n            });\n          }\n        });\n\n        if (fruit) {\n          Swal.fire(`You selected: ${fruit}`);\n        }\n      };\n\n      this.showAlertInputRadio = async () => {\n        /* inputOptions can be an object or Promise */\n        const inputOptions = new Promise(resolve => {\n          setTimeout(() => {\n            resolve({\n              '#ff0000': 'Red',\n              '#00ff00': 'Green',\n              '#0000ff': 'Blue'\n            });\n          }, 1000);\n        });\n        const {\n          value: color\n        } = await Swal.fire({\n          title: 'Select color',\n          input: 'radio',\n          inputOptions: inputOptions,\n          inputValidator: value => {\n            if (!value) {\n              return 'You need to choose something!';\n            }\n          }\n        });\n\n        if (color) {\n          Swal.fire({\n            html: `You selected: ${color}`\n          });\n        }\n      };\n\n      this.showAlertInputCheckbox = async () => {\n        const {\n          value: accept\n        } = await Swal.fire({\n          title: 'Terms and conditions',\n          input: 'checkbox',\n          inputValue: 1,\n          inputPlaceholder: 'I agree with the terms and conditions',\n          confirmButtonText: 'Continue <i class=\"fa fa-arrow-right\"></i>',\n          inputValidator: result => {\n            return !result && 'You need to agree with T&C';\n          }\n        });\n\n        if (accept) {\n          Swal.fire('You agreed with T&C :)');\n        }\n      };\n\n      this.showAlertInputFile = async () => {\n        const {\n          value: file\n        } = await Swal.fire({\n          title: 'Select image',\n          input: 'file',\n          inputAttributes: {\n            'accept': 'image/*',\n            'aria-label': 'Upload your profile picture'\n          }\n        });\n\n        if (file) {\n          const reader = new FileReader();\n\n          reader.onload = e => {\n            Swal.fire({\n              title: 'Your uploaded picture',\n              imageUrl: e.target.result,\n              imageAlt: 'The uploaded picture'\n            });\n          };\n\n          reader.readAsDataURL(file);\n        }\n      };\n\n      this.showAlertInputRange = async () => {\n        Swal.fire({\n          title: 'How old are you?',\n          icon: 'question',\n          input: 'range',\n          inputLabel: 'Your age',\n          inputAttributes: {\n            min: 8,\n            max: 120,\n            step: 1\n          },\n          inputValue: 25\n        });\n      };\n\n      this.showAlertInputMulti = async () => {\n        const {\n          value: formValues\n        } = await Swal.fire({\n          title: 'Multiple inputs',\n          html: '<input id=\"swal-input1\" class=\"swal2-input\">' + '<input id=\"swal-input2\" class=\"swal2-input\">',\n          focusConfirm: false,\n          preConfirm: () => {\n            return [document.getElementById('swal-input1').value, document.getElementById('swal-input2').value];\n          }\n        });\n\n        if (formValues) {\n          Swal.fire(JSON.stringify(formValues));\n        }\n      };\n\n      this.onTitleChange = value => {\n        this.setState({\n          title: value\n        });\n      };\n\n      this.onIconChange = value => {\n        this.setState({\n          icon: value\n        });\n      };\n\n      this.onInputChange = value => {\n        this.setState({\n          input: value\n        });\n      };\n\n      this.showCustomAlert = () => {\n        Swal.fire({\n          title: this.state.title,\n          icon: this.state.icon // input: this.state.input\n\n        });\n      };\n\n      this.state = {\n        title: 'Title',\n        icon: 'success',\n        input: 'text'\n      };\n    }\n\n    render() {\n      return /*#__PURE__*/_jsxDEV(WrappedComponent, {\n        showAlertMixin: this.showAlertMixin,\n        showAlertInputText: this.showAlertInputText,\n        showAlertInputEmail: this.showAlertInputEmail,\n        showAlertInputUrl: this.showAlertInputUrl,\n        showAlertInputPassword: this.showAlertInputPassword,\n        showAlertInputTextArea: this.showAlertInputTextArea,\n        showAlertInputSelect: this.showAlertInputSelect,\n        showAlertInputRadio: this.showAlertInputRadio,\n        showAlertInputCheckbox: this.showAlertInputCheckbox,\n        showAlertInputFile: this.showAlertInputFile,\n        showAlertInputRange: this.showAlertInputRange,\n        showAlertInputMulti: this.showAlertInputMulti,\n        showCustomAlert: this.showCustomAlert,\n        title: this.state.title,\n        icon: this.state.icon,\n        input: this.state.input,\n        onTitleChange: this.onTitleChange,\n        onIconChange: this.onIconChange,\n        onInputChange: this.onInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 14\n      }, this);\n    }\n\n  };\n};\n\nexport default _c2 = hoc(App);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/TX1/Documents/GitHub/sweetalert2-demo/src/App.js"],"names":["Swal","withReactContent","Button","Row","Col","Divider","Form","Input","Checkbox","Radio","React","Component","_","App","props","style","background","padding","width","iconTypes","height","display","flexDirection","fontSize","fontWeight","xs","sm","md","lg","showAlertMixin","showAlertInputText","showAlertInputEmail","showAlertInputUrl","showAlertInputPassword","showAlertInputTextArea","showAlertInputSelect","showAlertInputRadio","showAlertInputCheckbox","showAlertInputFile","showAlertInputRange","showAlertInputMulti","span","remember","title","e","onTitleChange","target","value","icon","onIconChange","map","type","showCustomAlert","hoc","WrappedComponent","EnhancedComponent","constructor","componentDidMount","Toast","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","fire","ipAPI","inputValue","fetch","then","response","json","data","ip","ipAddress","input","inputLabel","showCancelButton","inputValidator","email","inputPlaceholder","url","password","inputAttributes","maxlength","autocapitalize","autocorrect","text","fruit","inputOptions","apples","bananas","grapes","oranges","potato","broccoli","carrot","Promise","resolve","setTimeout","color","html","accept","confirmButtonText","result","file","reader","FileReader","onload","imageUrl","imageAlt","readAsDataURL","min","max","step","formValues","focusConfirm","preConfirm","document","getElementById","JSON","stringify","setState","onInputChange","state","render"],"mappings":"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","sourcesContent":["import './App.css';\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nimport { Button, Row, Col, Divider, Form, Input, Checkbox, Radio } from 'antd';\r\nimport React, { Component } from 'react';\r\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\r\nimport _ from 'lodash';\r\n\r\nfunction App(props) {\r\n  const style = { background: '#0092ff', padding: '8px 0', width: '100%' };\r\n  const iconTypes = ['warning', 'error', 'success', 'info', 'question'];\r\n  return (\r\n    <div style={{ width: '100%', height: '100%', display: 'flex', flexDirection: 'column', padding: 20 }}>\r\n      <p style={{ fontSize: 18, fontWeight: 600 }}>sweetalert2 demo</p>\r\n      <div>\r\n\r\n        <Divider orientation=\"left\">Mixin</Divider>\r\n        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n          <Col className=\"gutter-row\" span={2}>\r\n            <Button onClick={props.showAlertMixin}>Log in</Button>\r\n          </Col>\r\n        </Row>\r\n        <Divider orientation=\"left\">Inputs</Divider>\r\n        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n          <Col className=\"gutter-row\" span={2}>\r\n            <Button onClick={props.showAlertInputText}>Text</Button>\r\n          </Col>\r\n          <Col className=\"gutter-row\" span={2}>\r\n            <Button onClick={props.showAlertInputEmail}>Email</Button>\r\n          </Col>\r\n          <Col className=\"gutter-row\" span={2}>\r\n            <Button onClick={props.showAlertInputUrl}>Url</Button>\r\n          </Col>\r\n          <Col className=\"gutter-row\" span={2}>\r\n            <Button onClick={props.showAlertInputPassword}>Password</Button>\r\n          </Col>\r\n          <Col className=\"gutter-row\" span={2}>\r\n            <Button onClick={props.showAlertInputTextArea}>TextArea</Button>\r\n          </Col>\r\n          <Col className=\"gutter-row\" span={2}>\r\n            <Button onClick={props.showAlertInputSelect}>Select</Button>\r\n          </Col>\r\n          <Col className=\"gutter-row\" span={2}>\r\n            <Button onClick={props.showAlertInputRadio}>Radio</Button>\r\n          </Col>\r\n          <Col className=\"gutter-row\" span={2}>\r\n            <Button onClick={props.showAlertInputCheckbox}>Checkbox</Button>\r\n          </Col>\r\n          <Col className=\"gutter-row\" span={2}>\r\n            <Button onClick={props.showAlertInputFile}>File</Button>\r\n          </Col>\r\n          <Col className=\"gutter-row\" span={2}>\r\n            <Button onClick={props.showAlertInputRange}>Range</Button>\r\n          </Col>\r\n          <Col className=\"gutter-row\" span={2}>\r\n            <Button onClick={props.showAlertInputMulti}>Multi-input</Button>\r\n          </Col>\r\n        </Row>\r\n        <Divider orientation=\"left\">Custom</Divider>\r\n        <div style={{ display: 'flex' }}>\r\n          <Form\r\n            name=\"basic\"\r\n            labelCol={{ span: 8 }}\r\n            wrapperCol={{ span: 16 }}\r\n            initialValues={{ remember: true }}\r\n            // onFinish={onFinish}\r\n            // onFinishFailed={onFinishFailed}\r\n            autoComplete=\"off\"\r\n            style={{ width: '60%' }}\r\n          >\r\n            <Form.Item\r\n              label=\"title\"\r\n              // name=\"title\"\r\n            >\r\n              <Input value={props.title} onChange={(e) => props.onTitleChange(e.target.value)} />\r\n            </Form.Item>\r\n\r\n            <Form.Item label=\"icon\" >\r\n              <Radio.Group value={props.icon} onChange={(e) => props.onIconChange(e.target.value)}>\r\n                {_.map(iconTypes, type => {\r\n                  return(\r\n                    <Radio.Button value={type}>{type}</Radio.Button>\r\n                  )\r\n                })}\r\n              </Radio.Group>\r\n            </Form.Item>\r\n\r\n            {/* <Form.Item label=\"input\">\r\n              <Radio.Group value={props.input} onChange={(e) => props.onInputChange(e.target.value)}>\r\n                <Radio.Button value=\"warning\">warning</Radio.Button>\r\n                <Radio.Button value=\"error\">error</Radio.Button>\r\n                <Radio.Button value=\"success\">success</Radio.Button>\r\n                <Radio.Button value=\"info\">info</Radio.Button>\r\n                <Radio.Button value=\"question\">question</Radio.Button>\r\n              </Radio.Group>\r\n            </Form.Item> */}\r\n\r\n            {/* <Form.Item\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            rules={[{ required: true, message: 'Please input your password!' }]}\r\n          >\r\n            <Input.Password />\r\n          </Form.Item> */}\r\n\r\n            {/* <Form.Item name=\"remember\" valuePropName=\"checked\" wrapperCol={{ offset: 8, span: 16 }}>\r\n            <Checkbox>Remember me</Checkbox>\r\n          </Form.Item> */}\r\n\r\n            {/* <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Item> */}\r\n          </Form>\r\n        </div>\r\n\r\n        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n          <Col className=\"gutter-row\" span={2}>\r\n            <Button onClick={props.showCustomAlert}>Custom alert</Button>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nlet hoc = WrappedComponent => {\r\n  return class EnhancedComponent extends Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        title: 'Title',\r\n        icon: 'success',\r\n        input: 'text'\r\n\r\n      }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n\r\n    }\r\n\r\n    showAlertMixin = () => {\r\n      const Toast = Swal.mixin({\r\n        toast: true,\r\n        position: 'top-end',\r\n        showConfirmButton: false,\r\n        timer: 3000,\r\n        timerProgressBar: true,\r\n        didOpen: (toast) => {\r\n          toast.addEventListener('mouseenter', Swal.stopTimer)\r\n          toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n        }\r\n      })\r\n\r\n      Toast.fire({\r\n        icon: 'success',\r\n        title: 'Signed in successfully'\r\n      })\r\n    }\r\n\r\n    showAlertInputText = async () => {\r\n      const ipAPI = '//api.ipify.org?format=json'\r\n\r\n      const inputValue = fetch(ipAPI)\r\n        .then(response => response.json())\r\n        .then(data => data.ip)\r\n\r\n      const { value: ipAddress } = await Swal.fire({\r\n        title: 'Enter your IP address',\r\n        input: 'text',\r\n        inputLabel: 'Your IP address',\r\n        inputValue: inputValue,\r\n        showCancelButton: true,\r\n        inputValidator: (value) => {\r\n          if (!value) {\r\n            return 'You need to write something!'\r\n          }\r\n        }\r\n      })\r\n\r\n      if (ipAddress) {\r\n        Swal.fire(`Your IP address is ${ipAddress}`)\r\n      }\r\n    }\r\n\r\n    showAlertInputEmail = async () => {\r\n      const { value: email } = await Swal.fire({\r\n        title: 'Input email address',\r\n        input: 'email',\r\n        inputLabel: 'Your email address',\r\n        inputPlaceholder: 'Enter your email address'\r\n      })\r\n\r\n      if (email) {\r\n        Swal.fire(`Entered email: ${email}`)\r\n      }\r\n    }\r\n\r\n\r\n    showAlertInputUrl = async () => {\r\n      const { value: url } = await Swal.fire({\r\n        input: 'url',\r\n        inputLabel: 'URL address',\r\n        inputPlaceholder: 'Enter the URL'\r\n      })\r\n\r\n      if (url) {\r\n        Swal.fire(`Entered URL: ${url}`)\r\n      }\r\n    }\r\n\r\n    showAlertInputPassword = async () => {\r\n      const { value: password } = await Swal.fire({\r\n        title: 'Enter your password',\r\n        input: 'password',\r\n        inputLabel: 'Password',\r\n        inputPlaceholder: 'Enter your password',\r\n        inputAttributes: {\r\n          maxlength: 10,\r\n          autocapitalize: 'off',\r\n          autocorrect: 'off'\r\n        }\r\n      })\r\n\r\n      if (password) {\r\n        Swal.fire(`Entered password: ${password}`)\r\n      }\r\n    }\r\n\r\n    showAlertInputTextArea = async () => {\r\n      const { value: text } = await Swal.fire({\r\n        input: 'textarea',\r\n        inputLabel: 'Message',\r\n        inputPlaceholder: 'Type your message here...',\r\n        inputAttributes: {\r\n          'aria-label': 'Type your message here'\r\n        },\r\n        showCancelButton: true\r\n      })\r\n\r\n      if (text) {\r\n        Swal.fire(text)\r\n      }\r\n    }\r\n\r\n\r\n    showAlertInputSelect = async () => {\r\n      const { value: fruit } = await Swal.fire({\r\n        title: 'Select field validation',\r\n        input: 'select',\r\n        inputOptions: {\r\n          'Fruits': {\r\n            apples: 'Apples',\r\n            bananas: 'Bananas',\r\n            grapes: 'Grapes',\r\n            oranges: 'Oranges'\r\n          },\r\n          'Vegetables': {\r\n            potato: 'Potato',\r\n            broccoli: 'Broccoli',\r\n            carrot: 'Carrot'\r\n          },\r\n          'icecream': 'Ice cream'\r\n        },\r\n        inputPlaceholder: 'Select a fruit',\r\n        showCancelButton: true,\r\n        inputValidator: (value) => {\r\n          return new Promise((resolve) => {\r\n            if (value === 'oranges') {\r\n              resolve()\r\n            } else {\r\n              resolve('You need to select oranges :)')\r\n            }\r\n          })\r\n        }\r\n      })\r\n\r\n      if (fruit) {\r\n        Swal.fire(`You selected: ${fruit}`)\r\n      }\r\n    }\r\n\r\n\r\n    showAlertInputRadio = async () => {\r\n      /* inputOptions can be an object or Promise */\r\n      const inputOptions = new Promise((resolve) => {\r\n        setTimeout(() => {\r\n          resolve({\r\n            '#ff0000': 'Red',\r\n            '#00ff00': 'Green',\r\n            '#0000ff': 'Blue'\r\n          })\r\n        }, 1000)\r\n      })\r\n\r\n      const { value: color } = await Swal.fire({\r\n        title: 'Select color',\r\n        input: 'radio',\r\n        inputOptions: inputOptions,\r\n        inputValidator: (value) => {\r\n          if (!value) {\r\n            return 'You need to choose something!'\r\n          }\r\n        }\r\n      })\r\n\r\n      if (color) {\r\n        Swal.fire({ html: `You selected: ${color}` })\r\n      }\r\n    }\r\n\r\n    showAlertInputCheckbox = async () => {\r\n      const { value: accept } = await Swal.fire({\r\n        title: 'Terms and conditions',\r\n        input: 'checkbox',\r\n        inputValue: 1,\r\n        inputPlaceholder:\r\n          'I agree with the terms and conditions',\r\n        confirmButtonText:\r\n          'Continue <i class=\"fa fa-arrow-right\"></i>',\r\n        inputValidator: (result) => {\r\n          return !result && 'You need to agree with T&C'\r\n        }\r\n      })\r\n\r\n      if (accept) {\r\n        Swal.fire('You agreed with T&C :)')\r\n      }\r\n    }\r\n\r\n    showAlertInputFile = async () => {\r\n      const { value: file } = await Swal.fire({\r\n        title: 'Select image',\r\n        input: 'file',\r\n        inputAttributes: {\r\n          'accept': 'image/*',\r\n          'aria-label': 'Upload your profile picture'\r\n        }\r\n      })\r\n\r\n      if (file) {\r\n        const reader = new FileReader()\r\n        reader.onload = (e) => {\r\n          Swal.fire({\r\n            title: 'Your uploaded picture',\r\n            imageUrl: e.target.result,\r\n            imageAlt: 'The uploaded picture'\r\n          })\r\n        }\r\n        reader.readAsDataURL(file)\r\n      }\r\n    }\r\n\r\n    showAlertInputRange = async () => {\r\n      Swal.fire({\r\n        title: 'How old are you?',\r\n        icon: 'question',\r\n        input: 'range',\r\n        inputLabel: 'Your age',\r\n        inputAttributes: {\r\n          min: 8,\r\n          max: 120,\r\n          step: 1\r\n        },\r\n        inputValue: 25\r\n      })\r\n    }\r\n\r\n    showAlertInputMulti = async () => {\r\n      const { value: formValues } = await Swal.fire({\r\n        title: 'Multiple inputs',\r\n        html:\r\n          '<input id=\"swal-input1\" class=\"swal2-input\">' +\r\n          '<input id=\"swal-input2\" class=\"swal2-input\">',\r\n        focusConfirm: false,\r\n        preConfirm: () => {\r\n          return [\r\n            document.getElementById('swal-input1').value,\r\n            document.getElementById('swal-input2').value\r\n          ]\r\n        }\r\n      })\r\n\r\n      if (formValues) {\r\n        Swal.fire(JSON.stringify(formValues))\r\n      }\r\n    }\r\n\r\n\r\n    onTitleChange = (value) => {\r\n      this.setState({ title: value });\r\n    }\r\n\r\n    onIconChange = (value) => {\r\n      this.setState({ icon: value });\r\n    }\r\n\r\n    onInputChange = (value) => {\r\n      this.setState({ input: value });\r\n    }\r\n\r\n\r\n\r\n    showCustomAlert = () => {\r\n      Swal.fire({\r\n        title: this.state.title,\r\n        icon: this.state.icon,\r\n        // input: this.state.input\r\n      })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n      return <WrappedComponent\r\n        showAlertMixin={this.showAlertMixin}\r\n        showAlertInputText={this.showAlertInputText}\r\n        showAlertInputEmail={this.showAlertInputEmail}\r\n        showAlertInputUrl={this.showAlertInputUrl}\r\n        showAlertInputPassword={this.showAlertInputPassword}\r\n        showAlertInputTextArea={this.showAlertInputTextArea}\r\n        showAlertInputSelect={this.showAlertInputSelect}\r\n        showAlertInputRadio={this.showAlertInputRadio}\r\n        showAlertInputCheckbox={this.showAlertInputCheckbox}\r\n        showAlertInputFile={this.showAlertInputFile}\r\n        showAlertInputRange={this.showAlertInputRange}\r\n        showAlertInputMulti={this.showAlertInputMulti}\r\n        showCustomAlert={this.showCustomAlert}\r\n        title={this.state.title}\r\n        icon={this.state.icon}\r\n        input={this.state.input}\r\n        onTitleChange={this.onTitleChange}\r\n        onIconChange={this.onIconChange}\r\n        onInputChange={this.onInputChange}\r\n\r\n      />\r\n    }\r\n  }\r\n}\r\n\r\nexport default hoc(App);"]},"metadata":{},"sourceType":"module"}