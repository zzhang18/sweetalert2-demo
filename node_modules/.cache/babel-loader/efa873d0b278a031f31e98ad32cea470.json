{"ast":null,"code":"/** @preserve\n  * package: sweetalert2-react-content v4.2.0\n  * file: dist/sweetalert2-react-content.umd.js\n  * homepage: https://github.com/sweetalert2/sweetalert2-react-content#readme\n  * license: MIT\n  **/\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('react'), require('react-dom')) : typeof define === 'function' && define.amd ? define(['react', 'react-dom'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.sweetalert2ReactContent = factory(global.React, global.ReactDOM));\n})(this, function (React, ReactDOM) {\n  'use strict';\n\n  function _interopDefaultLegacy(e) {\n    return e && typeof e === 'object' && 'default' in e ? e : {\n      'default': e\n    };\n  }\n\n  var React__default = /*#__PURE__*/_interopDefaultLegacy(React);\n\n  var ReactDOM__default = /*#__PURE__*/_interopDefaultLegacy(ReactDOM);\n\n  const mounts = [{\n    key: 'title',\n    getter: swal => swal.getTitle()\n  }, {\n    key: 'html',\n    getter: swal => swal.getHtmlContainer()\n  }, {\n    key: 'confirmButtonText',\n    getter: swal => swal.getConfirmButton()\n  }, {\n    key: 'denyButtonText',\n    getter: swal => swal.getDenyButton()\n  }, {\n    key: 'cancelButtonText',\n    getter: swal => swal.getCancelButton()\n  }, {\n    key: 'footer',\n    getter: swal => swal.getFooter()\n  }, {\n    key: 'closeButtonHtml',\n    getter: swal => swal.getCloseButton()\n  }, {\n    key: 'iconHtml',\n    getter: swal => swal.getIcon().querySelector('.swal2-icon-content')\n  }, {\n    key: 'loaderHtml',\n    getter: swal => swal.getLoader()\n  }];\n\n  const noop = () => {}; // eslint-disable-line @typescript-eslint/no-empty-function\n\n\n  function withReactContent(ParentSwal) {\n    /* Returns `params` separated into a tuple of `reactParams` (the React params that need to be rendered)\n    and`otherParams` (all the other parameters, with any React params replaced with a space ' ') */\n    function extractReactParams(params) {\n      const reactParams = {};\n      const otherParams = {};\n      const mountKeys = mounts.map(mount => mount.key);\n      Object.entries(params).forEach(_ref => {\n        let [key, value] = _ref;\n\n        if (mountKeys.includes(key) && /*#__PURE__*/React__default[\"default\"].isValidElement(value)) {\n          reactParams[key] = value;\n          otherParams[key] = ' ';\n        } else {\n          otherParams[key] = value;\n        }\n      });\n      return [reactParams, otherParams];\n    }\n\n    function render(swal, reactParams) {\n      Object.entries(reactParams).forEach(_ref2 => {\n        let [key, value] = _ref2;\n        const mount = mounts.find(mount => mount.key === key);\n        const domElement = mount.getter(ParentSwal);\n        ReactDOM__default[\"default\"].render(value, domElement);\n\n        swal.__mountedDomElements.push(domElement);\n      });\n    }\n\n    function unrender(swal) {\n      swal.__mountedDomElements.forEach(domElement => {\n        ReactDOM__default[\"default\"].unmountComponentAtNode(domElement);\n      });\n\n      swal.__mountedDomElements = [];\n    }\n\n    return class extends ParentSwal {\n      static argsToParams(args) {\n        if ( /*#__PURE__*/React__default[\"default\"].isValidElement(args[0]) || /*#__PURE__*/React__default[\"default\"].isValidElement(args[1])) {\n          const params = {};\n          ['title', 'html', 'icon'].forEach((name, index) => {\n            if (args[index] !== undefined) {\n              params[name] = args[index];\n            }\n          });\n          return params;\n        } else {\n          return ParentSwal.argsToParams(args);\n        }\n      }\n\n      _main(params, mixinParams) {\n        this.__mountedDomElements = [];\n        this.__params = Object.assign({}, mixinParams, params);\n        const [reactParams, otherParams] = extractReactParams(this.__params);\n        const superDidOpen = otherParams.didOpen || noop;\n        const superDidDestroy = otherParams.didDestroy || noop;\n        return super._main(Object.assign({}, otherParams, {\n          didOpen: popup => {\n            render(this, reactParams);\n            superDidOpen(popup);\n          },\n          didDestroy: popup => {\n            superDidDestroy(popup);\n            unrender(this);\n          }\n        }));\n      }\n\n      update(params) {\n        Object.assign(this.__params, params);\n        unrender(this);\n        const [reactParams, otherParams] = extractReactParams(this.__params);\n        super.update(otherParams);\n        render(this, reactParams);\n      }\n\n    };\n  }\n\n  return withReactContent;\n});","map":{"version":3,"mappings":"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","names":["mounts","key","getter","swal","getTitle","getHtmlContainer","getConfirmButton","getDenyButton","getCancelButton","getFooter","getCloseButton","getIcon","querySelector","getLoader","noop","withReactContent","ParentSwal","extractReactParams","params","reactParams","otherParams","mountKeys","map","mount","Object","entries","forEach","value","includes","React","isValidElement","render","find","domElement","ReactDOM","__mountedDomElements","push","unrender","unmountComponentAtNode","argsToParams","args","name","index","undefined","_main","mixinParams","__params","assign","superDidOpen","didOpen","superDidDestroy","didDestroy","popup","update"],"sources":["C:\\Users\\TX1\\Documents\\GitHub\\sweetalert2-demo\\node_modules\\sweetalert2-react-content\\src\\mounts.js","C:\\Users\\TX1\\Documents\\GitHub\\sweetalert2-demo\\node_modules\\sweetalert2-react-content\\src\\index.js"],"sourcesContent":["export const mounts = [\n  {\n    key: 'title',\n    getter: swal => swal.getTitle(),\n  },\n  {\n    key: 'html',\n    getter: swal => swal.getHtmlContainer(),\n  },\n  {\n    key: 'confirmButtonText',\n    getter: swal => swal.getConfirmButton(),\n  },\n  {\n    key: 'denyButtonText',\n    getter: swal => swal.getDenyButton(),\n  },\n  {\n    key: 'cancelButtonText',\n    getter: swal => swal.getCancelButton(),\n  },\n  {\n    key: 'footer',\n    getter: swal => swal.getFooter(),\n  },\n  {\n    key: 'closeButtonHtml',\n    getter: swal => swal.getCloseButton(),\n  },\n  {\n    key: 'iconHtml',\n    getter: swal => swal.getIcon().querySelector('.swal2-icon-content'),\n  },\n  {\n    key: 'loaderHtml',\n    getter: swal => swal.getLoader(),\n  },\n]\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { mounts } from './mounts'\n\nconst noop = () => {} // eslint-disable-line @typescript-eslint/no-empty-function\n\nexport default function withReactContent (ParentSwal) {\n  /* Returns `params` separated into a tuple of `reactParams` (the React params that need to be rendered)\n  and`otherParams` (all the other parameters, with any React params replaced with a space ' ') */\n  function extractReactParams (params) {\n    const reactParams = {}\n    const otherParams = {}\n    const mountKeys = mounts.map(mount => mount.key)\n    Object.entries(params).forEach(([key, value]) => {\n      if (mountKeys.includes(key) && React.isValidElement(value)) {\n        reactParams[key] = value\n        otherParams[key] = ' '\n      } else {\n        otherParams[key] = value\n      }\n    })\n    return [reactParams, otherParams]\n  }\n  function render (swal, reactParams) {\n    Object.entries(reactParams).forEach(([key, value]) => {\n      const mount = mounts.find(mount => mount.key === key)\n      const domElement = mount.getter(ParentSwal)\n      ReactDOM.render(value, domElement)\n      swal.__mountedDomElements.push(domElement)\n    })\n  }\n\n  function unrender (swal) {\n    swal.__mountedDomElements.forEach(domElement => {\n      ReactDOM.unmountComponentAtNode(domElement)\n    })\n    swal.__mountedDomElements = []\n  }\n\n  return class extends ParentSwal {\n    static argsToParams (args) {\n      if (React.isValidElement(args[0]) || React.isValidElement(args[1])) {\n        const params = {}\n        ;['title', 'html', 'icon'].forEach((name, index) => {\n          if (args[index] !== undefined) {\n            params[name] = args[index]\n          }\n        })\n        return params\n      } else {\n        return ParentSwal.argsToParams(args)\n      }\n    }\n\n    _main (params, mixinParams) {\n      this.__mountedDomElements = []\n      this.__params = Object.assign({}, mixinParams, params)\n      const [reactParams, otherParams] = extractReactParams(this.__params)\n      const superDidOpen = otherParams.didOpen || noop\n      const superDidDestroy = otherParams.didDestroy || noop\n      return super._main(\n        Object.assign({}, otherParams, {\n          didOpen: popup => {\n            render(this, reactParams)\n            superDidOpen(popup)\n          },\n          didDestroy: popup => {\n            superDidDestroy(popup)\n            unrender(this)\n          },\n        }),\n      )\n    }\n\n    update (params) {\n      Object.assign(this.__params, params)\n      unrender(this)\n      const [reactParams, otherParams] = extractReactParams(this.__params)\n      super.update(otherParams)\n      render(this, reactParams)\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}